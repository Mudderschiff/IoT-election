/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ballot.proto */

#ifndef PROTOBUF_C_ballot_2eproto__INCLUDED
#define PROTOBUF_C_ballot_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct PlaintextBallotSelectionProto PlaintextBallotSelectionProto;
typedef struct PlaintextBallotContestProto PlaintextBallotContestProto;
typedef struct PlaintextBallotProto PlaintextBallotProto;
typedef struct CiphertextBallotProto CiphertextBallotProto;


/* --- enums --- */


/* --- messages --- */

struct  PlaintextBallotSelectionProto
{
  ProtobufCMessage base;
  protobuf_c_boolean vote;
  protobuf_c_boolean is_placeholder_selection;
};
#define PLAINTEXT_BALLOT_SELECTION_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&plaintext_ballot_selection_proto__descriptor) \
    , 0, 0 }


struct  PlaintextBallotContestProto
{
  ProtobufCMessage base;
  int32_t num_selections;
  size_t n_ballot_selections;
  PlaintextBallotSelectionProto **ballot_selections;
};
#define PLAINTEXT_BALLOT_CONTEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&plaintext_ballot_contest_proto__descriptor) \
    , 0, 0,NULL }


struct  PlaintextBallotProto
{
  ProtobufCMessage base;
  char *style_id;
  int32_t num_contests;
  size_t n_contests;
  PlaintextBallotContestProto **contests;
};
#define PLAINTEXT_BALLOT_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&plaintext_ballot_proto__descriptor) \
    , NULL, 0, 0,NULL }


struct  CiphertextBallotProto
{
  ProtobufCMessage base;
  char *style_id;
  ProtobufCBinaryData code_seed;
  ProtobufCBinaryData code;
  ProtobufCBinaryData crypto_hash;
};
#define CIPHERTEXT_BALLOT_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciphertext_ballot_proto__descriptor) \
    , NULL, {0,NULL}, {0,NULL}, {0,NULL} }


/* PlaintextBallotSelectionProto methods */
void   plaintext_ballot_selection_proto__init
                     (PlaintextBallotSelectionProto         *message);
size_t plaintext_ballot_selection_proto__get_packed_size
                     (const PlaintextBallotSelectionProto   *message);
size_t plaintext_ballot_selection_proto__pack
                     (const PlaintextBallotSelectionProto   *message,
                      uint8_t             *out);
size_t plaintext_ballot_selection_proto__pack_to_buffer
                     (const PlaintextBallotSelectionProto   *message,
                      ProtobufCBuffer     *buffer);
PlaintextBallotSelectionProto *
       plaintext_ballot_selection_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   plaintext_ballot_selection_proto__free_unpacked
                     (PlaintextBallotSelectionProto *message,
                      ProtobufCAllocator *allocator);
/* PlaintextBallotContestProto methods */
void   plaintext_ballot_contest_proto__init
                     (PlaintextBallotContestProto         *message);
size_t plaintext_ballot_contest_proto__get_packed_size
                     (const PlaintextBallotContestProto   *message);
size_t plaintext_ballot_contest_proto__pack
                     (const PlaintextBallotContestProto   *message,
                      uint8_t             *out);
size_t plaintext_ballot_contest_proto__pack_to_buffer
                     (const PlaintextBallotContestProto   *message,
                      ProtobufCBuffer     *buffer);
PlaintextBallotContestProto *
       plaintext_ballot_contest_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   plaintext_ballot_contest_proto__free_unpacked
                     (PlaintextBallotContestProto *message,
                      ProtobufCAllocator *allocator);
/* PlaintextBallotProto methods */
void   plaintext_ballot_proto__init
                     (PlaintextBallotProto         *message);
size_t plaintext_ballot_proto__get_packed_size
                     (const PlaintextBallotProto   *message);
size_t plaintext_ballot_proto__pack
                     (const PlaintextBallotProto   *message,
                      uint8_t             *out);
size_t plaintext_ballot_proto__pack_to_buffer
                     (const PlaintextBallotProto   *message,
                      ProtobufCBuffer     *buffer);
PlaintextBallotProto *
       plaintext_ballot_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   plaintext_ballot_proto__free_unpacked
                     (PlaintextBallotProto *message,
                      ProtobufCAllocator *allocator);
/* CiphertextBallotProto methods */
void   ciphertext_ballot_proto__init
                     (CiphertextBallotProto         *message);
size_t ciphertext_ballot_proto__get_packed_size
                     (const CiphertextBallotProto   *message);
size_t ciphertext_ballot_proto__pack
                     (const CiphertextBallotProto   *message,
                      uint8_t             *out);
size_t ciphertext_ballot_proto__pack_to_buffer
                     (const CiphertextBallotProto   *message,
                      ProtobufCBuffer     *buffer);
CiphertextBallotProto *
       ciphertext_ballot_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciphertext_ballot_proto__free_unpacked
                     (CiphertextBallotProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PlaintextBallotSelectionProto_Closure)
                 (const PlaintextBallotSelectionProto *message,
                  void *closure_data);
typedef void (*PlaintextBallotContestProto_Closure)
                 (const PlaintextBallotContestProto *message,
                  void *closure_data);
typedef void (*PlaintextBallotProto_Closure)
                 (const PlaintextBallotProto *message,
                  void *closure_data);
typedef void (*CiphertextBallotProto_Closure)
                 (const CiphertextBallotProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor plaintext_ballot_selection_proto__descriptor;
extern const ProtobufCMessageDescriptor plaintext_ballot_contest_proto__descriptor;
extern const ProtobufCMessageDescriptor plaintext_ballot_proto__descriptor;
extern const ProtobufCMessageDescriptor ciphertext_ballot_proto__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ballot_2eproto__INCLUDED */
